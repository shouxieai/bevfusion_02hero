"""
将终端中打印的, test.py运行中所读取的yaml全部信息，输出为json。方便观看
"""

a = """
{'seed': 0, 
'deterministic': False, 
'checkpoint_config': {'interval': 1, 'max_keep_ckpts': 1}, 
'log_config': {'interval': 50, 'hooks': [{'type': 'TextLoggerHook'}, {'type': 'TensorboardLoggerHook'}]}, 
'load_from': None, 
'resume_from': None, 
'cudnn_benchmark': False, 
'fp16': {'loss_scale': {'growth_interval': 2000}}, 
'max_epochs': 6, 
'runner': {'type': 'CustomEpochBasedRunner', 'max_epochs': 6}, 
'dataset_type': 'NuScenesDataset', 
'dataset_root': 'data/nuscenes/', 
'gt_paste_stop_epoch': -1, 
'reduce_beams': 32, 
'load_dim': 5, 
'use_dim': 5, 
'load_augmented': None, 
'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], 
'voxel_size': [0.075, 0.075, 0.2], 'image_size': [256, 704], 
'augment2d': {'resize': [[0.38, 0.55], [0.48, 0.48]], 
'rotate': [-5.4, 5.4], 
'gridmask': {'prob': 0.0, 'fixed_prob': True}}, 
'augment3d': {'scale': [0.9, 1.1], 
'rotate': [-0.78539816, 0.78539816], 
'translate': 0.5}, 
'object_classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 
'map_classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider'], 
'input_modality': {'use_lidar': True, 'use_camera': True, 'use_radar': False, 'use_map': False, 'use_external': False}, 
'train_pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True}, 
                    {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, 
                    {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, 
                    {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, 
                    {'type': 'ObjectPaste', 'stop_epoch': -1, 'db_sampler': {'dataset_root': 'data/nuscenes/', 
                                                                                'info_path': 'data/nuscenes/nuscenes_dbinfos_train.pkl', 
                                                                                'rate': 1.0, 
                                                                                'prepare': {'filter_by_difficulty': [-1], 
                                                                                            'filter_by_min_points': {'car': 5, 'truck': 5, 'bus': 5, 'trailer': 5, 'construction_vehicle': 5, 'traffic_cone': 5, 'barrier': 5, 'motorcycle': 5, 'bicycle': 5, 'pedestrian': 5}}, 
                                                                                            'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 
                                                                                            'sample_groups': {'car': 2, 'truck': 3, 'construction_vehicle': 7, 'bus': 4, 'trailer': 6, 'barrier': 2, 'motorcycle': 6, 'bicycle': 6, 'pedestrian': 2, 'traffic_cone': 2}, 
                                                                                            'points_loader': {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32}}}, 
                    {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.38, 0.55], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [-5.4, 5.4], 'rand_flip': True, 'is_train': True}, 
                    {'type': 'GlobalRotScaleTrans', 'resize_lim': [0.9, 1.1], 'rot_lim': [-0.78539816, 0.78539816], 'trans_lim': 0.5, 'is_train': True}, 
                    {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, 
                    {'type': 'RandomFlip3D'}, {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
                    {'type': 'ObjectRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
                    {'type': 'ObjectNameFilter', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
                    {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, {'type': 'GridMask', 'use_h': True, 'use_w': True, 'max_epoch': 6, 'rotate': 1, 'offset': False, 'ratio': 0.5, 'mode': 1, 'prob': 0.0, 'fixed_prob': True}, 
                    {'type': 'PointShuffle'}, {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
                    {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}], 
'test_pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True}, 
                    {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, 
                    {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, 
                    {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, 
                    {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.48, 0.48], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [0.0, 0.0], 'rand_flip': False, 'is_train': False}, 
                    {'type': 'GlobalRotScaleTrans', 'resize_lim': [1.0, 1.0], 'rot_lim': [0.0, 0.0], 'trans_lim': 0.0, 'is_train': False}, 
                    {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, 
                    {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
                    {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 
                    {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
                    {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 
                                    'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}], 
                                    'data': {'samples_per_gpu': 4, 
                                                'workers_per_gpu': 1, 
                                                'train': {'type': 'CBGSDataset', 
                                                        'dataset': {'type': 'NuScenesDataset', 'dataset_root': 'data/nuscenes/', 
                                                                'ann_file': 'data/nuscenes/nuscenes_infos_train.pkl', 
                                                                'pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True}, 
                                                                            {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, 
                                                                            {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, 
                                                                            {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, 
                                                                            {'type': 'ObjectPaste', 'stop_epoch': -1, 'db_sampler': {'dataset_root': 'data/nuscenes/', 'info_path': 'data/nuscenes/nuscenes_dbinfos_train.pkl', 'rate': 1.0, 'prepare': {'filter_by_difficulty': [-1], 'filter_by_min_points': {'car': 5, 'truck': 5, 'bus': 5, 'trailer': 5, 'construction_vehicle': 5, 'traffic_cone': 5, 'barrier': 5, 'motorcycle': 5, 'bicycle': 5, 'pedestrian': 5}}, 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 'sample_groups': {'car': 2, 'truck': 3, 'construction_vehicle': 7, 'bus': 4, 'trailer': 6, 'barrier': 2, 'motorcycle': 6, 'bicycle': 6, 'pedestrian': 2, 'traffic_cone': 2}, 'points_loader': {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32}}}, 
                                                                            {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.38, 0.55], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [-5.4, 5.4], 'rand_flip': True, 'is_train': True}, 
                                                                            {'type': 'GlobalRotScaleTrans', 'resize_lim': [0.9, 1.1], 'rot_lim': [-0.78539816, 0.78539816], 'trans_lim': 0.5, 'is_train': True}, 
                                                                            {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, 
                                                                            {'type': 'RandomFlip3D'}, 
                                                                            {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
                                                                            {'type': 'ObjectRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
                                                                            {'type': 'ObjectNameFilter', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
                                                                            {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 
                                                                            {'type': 'GridMask', 'use_h': True, 'use_w': True, 'max_epoch': 6, 'rotate': 1, 'offset': False, 'ratio': 0.5, 'mode': 1, 'prob': 0.0, 'fixed_prob': True}, 
                                                                            {'type': 'PointShuffle'}, 
                                                                            {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
                                                                            {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 
                                                                                                'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}], 
                                                                                            'object_classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 
                                                                                            'map_classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider'], 
                                                                                            'modality': {'use_lidar': True, 'use_camera': True, 'use_radar': False, 'use_map': False, 'use_external': False}, 
                                                                                            'test_mode': False, 'use_valid_flag': True, 'box_type_3d': 'LiDAR'}}, 'val': {'type': 'NuScenesDataset', 'dataset_root': 'data/nuscenes/', 'ann_file': 'data/nuscenes/nuscenes_infos_val.pkl', 'pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True}, {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.48, 0.48], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [0.0, 0.0], 'rand_flip': False, 'is_train': False}, {'type': 'GlobalRotScaleTrans', 'resize_lim': [1.0, 1.0], 'rot_lim': [0.0, 0.0], 'trans_lim': 0.0, 'is_train': False}, {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}], 
                                    'object_classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 
                    'map_classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider'], 
'modality': {'use_lidar': True, 'use_camera': True, 'use_radar': False, 'use_map': False, 'use_external': False}, 
'test_mode': False, 'box_type_3d': 'LiDAR'}, 
'test': {'type': 'NuScenesDataset', 
'dataset_root': 'data/nuscenes/', 
'ann_file': 'data/nuscenes/nuscenes_infos_val.pkl', 
'pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True},   
            {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, 
            {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, 
            {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, 
            {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.48, 0.48], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [0.0, 0.0], 'rand_flip': False, 'is_train': False}, 
            {'type': 'GlobalRotScaleTrans', 'resize_lim': [1.0, 1.0], 'rot_lim': [0.0, 0.0], 'trans_lim': 0.0, 'is_train': False},
            {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, 
            {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
            {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 
            {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
            {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}], 'object_classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'], 'map_classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider'], 'modality': {'use_lidar': True, 'use_camera': True, 'use_radar': False, 'use_map': False, 'use_external': False}, 'test_mode': True, 'box_type_3d': 'LiDAR'}}, 'evaluation': {'interval': 1, 'pipeline': [{'type': 'LoadMultiViewImageFromFiles', 'to_float32': True}, 
            {'type': 'LoadPointsFromFile', 'coord_type': 'LIDAR', 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'load_augmented': None}, 
            {'type': 'LoadPointsFromMultiSweeps', 'sweeps_num': 9, 'load_dim': 5, 'use_dim': 5, 'reduce_beams': 32, 'pad_empty_sweeps': True, 'remove_close': True, 'load_augmented': None}, 
            {'type': 'LoadAnnotations3D', 'with_bbox_3d': True, 'with_label_3d': True, 'with_attr_label': False}, 
            {'type': 'ImageAug3D', 'final_dim': [256, 704], 'resize_lim': [0.48, 0.48], 'bot_pct_lim': [0.0, 0.0], 'rot_lim': [0.0, 0.0], 'rand_flip': False, 'is_train': False}, 
            {'type': 'GlobalRotScaleTrans', 'resize_lim': [1.0, 1.0], 'rot_lim': [0.0, 0.0], 'trans_lim': 0.0, 'is_train': False}, 
            {'type': 'LoadBEVSegmentation', 'dataset_root': 'data/nuscenes/', 'xbound': [-50.0, 50.0, 0.5], 'ybound': [-50.0, 50.0, 0.5], 'classes': ['drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area', 'divider']}, 
            {'type': 'PointsRangeFilter', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]}, 
            {'type': 'ImageNormalize', 'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 
            {'type': 'DefaultFormatBundle3D', 'classes': ['car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone']}, 
            {'type': 'Collect3D', 'keys': ['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'], 'meta_keys': ['camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera', 'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix']}]}, 'model': {'type': 'BEVFusion', 'encoders': {'camera': {'neck': {'type': 'GeneralizedLSSFPN', 'in_channels': [192, 384, 768], 'out_channels': 256, 'start_level': 0, 'num_outs': 3, 'norm_cfg': {'type': 'BN2d', 'requires_grad': True}, 'act_cfg': {'type': 'ReLU', 'inplace': True}, 'upsample_cfg': {'mode': 'bilinear', 'align_corners': False}}, 'vtransform': {'type': 'DepthLSSTransform', 'in_channels': 256, 'out_channels': 80, 'image_size': [256, 704], 'feature_size': [32, 88], 'xbound': [-54.0, 54.0, 0.3], 'ybound': [-54.0, 54.0, 0.3], 'zbound': [-10.0, 10.0, 20.0], 'dbound': [1.0, 60.0, 0.5], 'downsample': 2}, 'backbone': {'type': 'SwinTransformer', 'embed_dims': 96, 'depths': [2, 2, 6, 2], 'num_heads': [3, 6, 12, 24], 'window_size': 7, 'mlp_ratio': 4, 'qkv_bias': True, 'qk_scale': None, 'drop_rate': 0.0, 'attn_drop_rate': 0.0, 'drop_path_rate': 0.2, 'patch_norm': True, 'out_indices': [1, 2, 3], 'with_cp': False, 'convert_weights': True, 'init_cfg': {'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}}}, 'lidar': {'voxelize': {'max_num_points': 10, 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], 'voxel_size': [0.075, 0.075, 0.2], 'max_voxels': [120000, 160000]}, 'backbone': {'type': 'SparseEncoder', 'in_channels': 5, 'sparse_shape': [1440, 1440, 41], 'output_channels': 128, 'order': ['conv', 'norm', 'act'], 'encoder_channels': [[16, 16, 32], [32, 32, 64], [64, 64, 128], [128, 128]], 'encoder_paddings': [[0, 0, 1], [0, 0, 1], [0, 0, [1, 1, 0]], [0, 0]], 'block_type': 'basicblock'}}}, 'fuser': {'type': 'ConvFuser', 'in_channels': [80, 256], 'out_channels': 256}, 'heads': {'map': None, 'object': {'type': 'TransFusionHead', 'num_proposals': 200, 'auxiliary': True, 'in_channels': 512, 'hidden_channel': 128, 'num_classes': 10, 'num_decoder_layers': 1, 'num_heads': 8, 'nms_kernel_size': 3, 'ffn_channel': 256, 'dropout': 0.1, 'bn_momentum': 0.1, 'activation': 'relu', 'train_cfg': {'dataset': 'nuScenes', 'point_cloud_range': [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], 'grid_size': [1440, 1440, 41], 'voxel_size': [0.075, 0.075, 0.2], 'out_size_factor': 8, 'gaussian_overlap': 0.1, 'min_radius': 2, 'pos_weight': -1, 'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2], 'assigner': {'type': 'HungarianAssigner3D', 'iou_calculator': {'type': 'BboxOverlaps3D', 'coordinate': 'lidar'}, 'cls_cost': {'type': 'FocalLossCost', 'gamma': 2.0, 'alpha': 0.25, 'weight': 0.15}, 'reg_cost': {'type': 'BBoxBEVL1Cost', 'weight': 0.25}, 'iou_cost': {'type': 'IoU3DCost', 'weight': 0.25}}}, 'test_cfg': {'dataset': 'nuScenes', 'grid_size': [1440, 1440, 41], 'out_size_factor': 8, 'voxel_size': [0.075, 0.075], 'pc_range': [-54.0, -54.0], 'nms_type': None}, 'common_heads': {'center': [2, 2], 'height': [1, 2], 'dim': [3, 2], 'rot': [2, 2], 'vel': [2, 2]}, 'bbox_coder': {'type': 'TransFusionBBoxCoder', 'pc_range': [-54.0, -54.0], 'post_center_range': [-61.2, -61.2, -10.0, 61.2, 61.2, 10.0], 'score_threshold': 0.0, 'out_size_factor': 8, 'voxel_size': [0.075, 0.075], 'code_size': 10}, 'loss_cls': {'type': 'FocalLoss', 'use_sigmoid': True, 'gamma': 2.0, 'alpha': 0.25, 'reduction': 'mean', 'loss_weight': 1.0}, 'loss_heatmap': {'type': 'GaussianFocalLoss', 'reduction': 'mean', 'loss_weight': 1.0}, 'loss_bbox': {'type': 'L1Loss', 'reduction': 'mean', 'loss_weight': 0.25}}}, 'decoder': {'backbone': {'type': 'SECOND', 'in_channels': 256, 'out_channels': [128, 256], 'layer_nums': [5, 5], 'layer_strides': [1, 2], 'norm_cfg': {'type': 'BN', 'eps': 0.001, 'momentum': 0.01}, 'conv_cfg': {'type': 'Conv2d', 'bias': False}}, 'neck': {'type': 'SECONDFPN', 'in_channels': [128, 256], 'out_channels': [256, 256], 'upsample_strides': [1, 2], 'norm_cfg': {'type': 'BN', 'eps': 0.001, 'momentum': 0.01}, 'upsample_cfg': {'type': 'deconv', 'bias': False}, 'use_conv_for_no_stride': True}}}, 'optimizer': {'type': 'AdamW', 'lr': 0.0002, 'weight_decay': 0.01}, 'optimizer_config': {'grad_clip': {'max_norm': 35, 'norm_type': 2}}, 'lr_config': {'policy': 'CosineAnnealing', 'warmup': 'linear', 'warmup_iters': 500, 'warmup_ratio': 0.33333333, 'min_lr_ratio': 0.001}, 'momentum_config': {'policy': 'cyclic'}}
"""
b = """{'img': DataContainer(tensor([[[[-0.0801, -0.0972,  0.0056,  ..., -1.1247, -1.1075, -1.1932],
          [-0.0801, -0.0629, -0.0801,  ..., -1.2103, -1.2274, -1.3130],
          [-0.1143, -0.0972, -0.0972,  ..., -1.2788, -1.2788, -1.3130],
          ...,
          [-0.5938, -0.5767, -0.5596,  ..., -0.3712, -0.4739, -0.4911],
          [-0.5938, -0.5938, -0.6109,  ..., -0.3883, -0.4911, -0.5253],
          [-0.6109, -0.6281, -0.6281,  ..., -0.3369, -0.3712, -0.4397]],

         [[-0.6176, -0.6176, -0.6176,  ..., -1.0378, -1.0203, -1.0903],
          [-0.6527, -0.6702, -0.6352,  ..., -1.0553, -1.0378, -1.0903],
          [-0.6877, -0.6877, -0.6702,  ..., -1.1253, -1.1253, -1.1604],
          ...,
          [-0.3725, -0.3550, -0.3375,  ..., -0.1450, -0.2500, -0.2675],
          [-0.3725, -0.3725, -0.3901,  ..., -0.1625, -0.2675, -0.3025],
          [-0.3901, -0.4076, -0.4076,  ..., -0.1099, -0.1450, -0.2150]],

         [[-0.5321, -0.5321, -0.5147,  ..., -0.9156, -0.8981, -0.9678],
          [-0.5670, -0.5147, -0.4798,  ..., -1.0201, -1.0027, -1.0724],
          [-0.6018, -0.5495, -0.5147,  ..., -1.0376, -1.0376, -1.0724],
          ...,
          [-0.1487, -0.1312, -0.1138,  ...,  0.0431, -0.0615, -0.0790],
          [-0.1487, -0.1487, -0.1661,  ...,  0.0256, -0.0790, -0.1138],
          [-0.1661, -0.1835, -0.1835,  ...,  0.0779,  0.0431, -0.0267]]],


        [[[-0.4397, -0.4397, -0.4226,  ..., -0.8849, -0.5596, -0.5253],
          [-0.5082, -0.4739, -0.4568,  ..., -0.8335, -0.5424, -0.5253],
          [-0.5253, -0.4739, -0.4226,  ..., -0.9020, -0.6281, -0.5938],
          ...,
          [ 0.4679,  0.4337,  0.4508,  ..., -0.4054, -0.4226, -0.4226],
          [ 0.4679,  0.3994,  0.4166,  ..., -0.3369, -0.3198, -0.3198],
          [ 0.3994,  0.3309,  0.3309,  ..., -0.4226, -0.3712, -0.3369]],

         [[-0.5651, -0.5826, -0.5476,  ..., -0.7402, -0.4601, -0.4251],
          [-0.6352, -0.5826, -0.5476,  ..., -0.7052, -0.4426, -0.4251],
          [-0.7052, -0.6176, -0.5651,  ..., -0.7927, -0.5126, -0.4951],
          ...,
          [ 0.5378,  0.5028,  0.5203,  ..., -0.2850, -0.3025, -0.3025],
          [ 0.5378,  0.5028,  0.5378,  ..., -0.2500, -0.2500, -0.2500],
          [ 0.4678,  0.4503,  0.4503,  ..., -0.3550, -0.3025, -0.2675]],

         [[-0.4624, -0.4798, -0.4624,  ..., -0.5844, -0.2881, -0.2532],
          [-0.5495, -0.4973, -0.4798,  ..., -0.5670, -0.2881, -0.2881],
          [-0.6018, -0.5147, -0.4624,  ..., -0.6018, -0.3230, -0.3055],
          ...,
          [ 0.7054,  0.6705,  0.6879,  ..., -0.2707, -0.2707, -0.2707],
          [ 0.7228,  0.6879,  0.7228,  ..., -0.1661, -0.1661, -0.1487],
          [ 0.6705,  0.6356,  0.6356,  ..., -0.2532, -0.2010, -0.1661]]],


        [[[-0.0972, -0.0629, -0.0801,  ..., -0.8164, -0.8164, -0.8335],
          [ 0.0056,  0.0227,  0.0056,  ..., -0.9705, -0.8678, -0.7822],
          [ 0.0056,  0.0056,  0.0056,  ..., -0.9020, -0.8507, -0.7993],
          ...,
          [-0.8335, -0.8335, -0.8507,  ..., -0.7993, -0.7308, -0.7479],
          [-0.8335, -0.8335, -0.8849,  ..., -0.8507, -0.8507, -0.8507],
          [-0.8507, -0.8335, -0.9020,  ..., -0.9192, -0.9534, -0.9192]],

         [[ 0.1527,  0.1877,  0.1702,  ..., -0.7227, -0.7052, -0.7227],
          [ 0.2577,  0.2752,  0.2577,  ..., -0.8627, -0.7577, -0.6877],
          [ 0.2577,  0.2577,  0.2577,  ..., -0.7752, -0.7402, -0.7052],
          ...,
          [-0.6176, -0.6176, -0.6352,  ..., -0.6001, -0.5301, -0.5476],
          [-0.6176, -0.6176, -0.6702,  ..., -0.6527, -0.6527, -0.6527],
          [-0.6352, -0.6176, -0.6877,  ..., -0.7227, -0.7577, -0.7227]],

         [[ 0.5485,  0.5834,  0.5659,  ..., -0.8633, -0.8807, -0.9156],
          [ 0.6531,  0.6531,  0.6356,  ..., -0.9504, -0.8633, -0.8284],
          [ 0.6182,  0.6182,  0.6182,  ..., -0.8633, -0.8284, -0.8110],
          ...,
          [-0.4275, -0.4275, -0.4450,  ..., -0.4798, -0.4101, -0.4275],
          [-0.4275, -0.4275, -0.4798,  ..., -0.5321, -0.5321, -0.5321],
          [-0.4450, -0.4275, -0.4973,  ..., -0.6018, -0.6367, -0.6018]]],


        [[[-1.2617, -1.2788, -1.2788,  ..., -1.4672, -1.4843, -1.5185],
          [-1.3130, -1.2959, -1.2445,  ..., -1.4158, -1.4158, -1.3815],
          [-1.2103, -1.1589, -1.0390,  ..., -1.3644, -1.3987, -1.3815],
          ...,
          [ 0.4508,  0.4508,  0.4679,  ...,  0.3138,  0.3138,  0.3138],
          [ 0.4851,  0.4851,  0.4851,  ...,  0.3994,  0.3823,  0.3823],
          [ 0.4337,  0.4337,  0.4337,  ...,  0.4166,  0.4166,  0.4166]],

         [[-1.1604, -1.1779, -1.1779,  ..., -1.2829, -1.3004, -1.3354],
          [-1.2129, -1.1954, -1.1429,  ..., -1.2829, -1.2654, -1.2479],
          [-1.1078, -1.0553, -0.9328,  ..., -1.2654, -1.3004, -1.2829],
          ...,
          [ 0.6779,  0.6779,  0.6954,  ...,  0.5728,  0.5728,  0.5728],
          [ 0.6954,  0.6954,  0.6954,  ...,  0.6254,  0.6078,  0.6078],
          [ 0.6429,  0.6429,  0.6429,  ...,  0.6429,  0.6429,  0.6429]],

         [[-0.9330, -0.9330, -0.9330,  ..., -1.1421, -1.1596, -1.1944],
          [-0.9504, -0.9330, -0.8807,  ..., -1.1073, -1.0898, -1.0724],
          [-0.8807, -0.8284, -0.7064,  ..., -1.0724, -1.1073, -1.0898],
          ...,
          [ 0.7925,  0.8099,  0.8099,  ...,  0.6531,  0.6531,  0.6531],
          [ 0.8797,  0.8971,  0.8797,  ...,  0.7402,  0.7228,  0.7228],
          [ 0.8448,  0.8448,  0.8448,  ...,  0.7576,  0.7576,  0.7576]]],


        [[[-1.7240, -1.6384, -1.5870,  ..., -0.5767, -0.5938, -0.6623],
          [-1.6555, -1.6213, -1.6042,  ..., -0.7993, -0.8164, -0.8507],
          [-1.6555, -1.6555, -1.6555,  ..., -1.0562, -1.0390, -1.0562],
          ...,
          [-1.0562, -1.0562, -0.9877,  ..., -0.8335, -0.7822, -0.8335],
          [-1.0733, -1.0390, -0.9534,  ..., -0.7993, -0.8164, -0.8164],
          [-1.1247, -1.1418, -1.0390,  ..., -0.7993, -0.8164, -0.7993]],

         [[-1.5280, -1.4055, -1.3179,  ..., -0.5826, -0.6001, -0.6877],
          [-1.4930, -1.4580, -1.4230,  ..., -0.6702, -0.6702, -0.7052],
          [-1.4580, -1.4580, -1.4405,  ..., -0.9328, -0.9153, -0.9503],
          ...,
          [-0.8627, -0.8627, -0.7927,  ..., -0.6702, -0.6176, -0.6702],
          [-0.8978, -0.8627, -0.7752,  ..., -0.6352, -0.6702, -0.6877],
          [-0.9503, -0.9678, -0.8627,  ..., -0.6352, -0.6702, -0.6877]],

         [[-1.2641, -1.1596, -1.1073,  ..., -0.5321, -0.5495, -0.6193],
          [-1.3164, -1.2641, -1.2467,  ..., -0.5321, -0.5321, -0.5670],
          [-1.4036, -1.4036, -1.3861,  ..., -0.7936, -0.7761, -0.7936],
          ...,
          [-0.7064, -0.7064, -0.6367,  ..., -0.5670, -0.5147, -0.5670],
          [-0.6367, -0.6367, -0.5670,  ..., -0.5321, -0.5670, -0.5321],
          [-0.6715, -0.7064, -0.6541,  ..., -0.5321, -0.5670, -0.5147]]],


        [[[ 0.0569,  0.0912,  0.0398,  ..., -1.2617, -1.2274, -1.1760],
          [ 0.0569,  0.0741,  0.0227,  ..., -1.2617, -1.2103, -1.1932],
          [ 0.0569,  0.0741,  0.0056,  ..., -1.2274, -1.1760, -1.1932],
          ...,
          [-1.4500, -1.4158, -1.3644,  ..., -1.0219, -0.9534, -1.0390],
          [-1.4329, -1.3987, -1.3130,  ..., -0.9705, -0.9363, -0.9705],
          [-1.4329, -1.3644, -1.2959,  ..., -1.0390, -1.0048, -0.9534]],

         [[ 0.2577,  0.2927,  0.2402,  ..., -1.1429, -1.0903, -1.0553],
          [ 0.2577,  0.2752,  0.2227,  ..., -1.1253, -1.0728, -1.0553],
          [ 0.2577,  0.2752,  0.2052,  ..., -1.0903, -1.0378, -1.0553],
          ...,
          [-1.3179, -1.2829, -1.2304,  ..., -0.8277, -0.7577, -0.8452],
          [-1.3529, -1.3004, -1.2304,  ..., -0.8102, -0.7927, -0.8277],
          [-1.3529, -1.2829, -1.2129,  ..., -0.8803, -0.8803, -0.8277]],

         [[ 0.4614,  0.4962,  0.4439,  ..., -1.0027, -0.9504, -0.9156],
          [ 0.4614,  0.4788,  0.4265,  ..., -0.9853, -0.9330, -0.9156],
          [ 0.4614,  0.4788,  0.4091,  ..., -0.9504, -0.8981, -0.9156],
          ...,
          [-1.1770, -1.1421, -1.0898,  ..., -0.7064, -0.6367, -0.7238],
          [-1.2119, -1.1596, -1.0898,  ..., -0.7064, -0.6715, -0.7064],
          [-1.2119, -1.1421, -1.0724,  ..., -0.7761, -0.7587, -0.7064]]]])), 'points': DataContainer(tensor([[-3.1226e+00, -4.2449e-01, -1.8768e+00,  4.0000e+00,  0.0000e+00],
        [-3.2819e+00, -4.2313e-01, -1.8688e+00,  5.0000e+00,  0.0000e+00],
        [-3.4933e+00, -4.2222e-01, -1.8821e+00,  6.0000e+00,  0.0000e+00],
        ...,
        [-7.9269e+00, -1.4184e-03, -1.6849e+00,  3.4000e+01,  0.0000e+00],
        [-8.2272e+00,  1.4265e-03, -1.5501e+00,  2.0000e+01,  0.0000e+00],
        [-8.5262e+00, -3.2753e-02, -1.1983e+00,  1.0000e+02,  0.0000e+00]])), 'gt_bboxes_3d': DataContainer(LiDARInstance3DBoxes(
    tensor([[-7.9647e+00,  3.6902e+01,  2.1394e-01,  6.2100e-01,  6.4700e-01,
          1.7780e+00,  2.1186e-01, -1.7268e-01, -1.0366e+00],
        [ 7.3898e+00,  1.7461e+01, -1.7989e-01,  6.8800e-01,  9.4400e-01,
          1.9040e+00,  2.3387e-01, -3.3320e-01, -1.4408e+00],
        [-1.0372e+01,  1.4923e+01, -5.4252e-01,  5.7800e-01,  6.1300e-01,
          1.7520e+00, -4.4858e-02, -4.2574e-03, -1.3675e+00],
        [-4.0423e+01,  1.7111e+01, -1.1913e+00,  9.0900e-01,  1.1050e+00,
          2.0000e+00,  1.5652e+00, -1.1006e+00,  1.6030e-02],
        [ 9.8771e+00,  2.9820e+01,  1.1048e-01,  7.5100e-01,  1.0300e+00,
          1.9750e+00,  1.6406e-01, -2.7933e-01, -1.8618e+00],
        [ 6.6171e+00,  4.2966e+01,  6.0782e-01,  2.0010e+00,  4.7340e+00,
          1.4810e+00, -2.7554e+00,  1.5457e+00,  5.3928e+00],
        [ 5.7166e+00, -1.2945e-01, -7.6415e-01,  6.3100e-01,  6.1000e-01,
          1.9290e+00, -3.2881e+00, -1.8581e-01,  1.3567e+00],
        [-9.4140e+00,  1.9118e+01, -3.6290e-01,  6.9700e-01,  4.9800e-01,
          1.7610e+00, -9.9518e-03, -2.2955e-02, -1.3004e+00],
        [ 1.0641e+01,  2.7106e+01,  3.1427e-02,  6.6500e-01,  7.3600e-01,
          1.8900e+00, -3.0093e+00,  1.6085e-01,  1.4806e+00],
        [ 1.7422e-01, -1.9751e+01, -1.8044e+00,  1.8710e+00,  4.4880e+00,
          1.5150e+00, -3.1600e+00, -9.8724e-02,  8.7583e+00],
        [ 1.3020e+01,  3.6867e+01,  2.0602e-01,  5.4600e-01,  4.3900e-01,
          1.6220e+00,  6.4306e-01, -5.4785e-01, -6.3229e-01],
        [-1.5682e+01,  3.6916e+01,  1.1080e-01,  6.4000e-01,  3.9500e-01,
          1.8070e+00,  1.2666e+00,  0.0000e+00,  0.0000e+00],
        [ 1.7598e+01,  1.1036e+01, -7.7214e-01,  4.8900e-01,  4.9100e-01,
          1.8510e+00, -4.6598e+00, -1.2339e+00,  6.3605e-02],
        [-6.0348e+00,  3.1876e+01,  2.1945e-01,  6.1200e-01,  7.3600e-01,
          1.8770e+00, -9.3527e-01,  3.4517e-01, -3.4563e-01],
        [ 8.5355e+00,  7.2949e+01,  2.4188e+00,  1.8030e+00,  4.4950e+00,
          1.5600e+00,  2.1832e-01, -1.7220e+00, -7.9513e+00],
        [-4.8494e+00,  5.4094e+01,  1.2570e+00,  5.8500e-01,  6.8100e-01,
          1.7110e+00, -3.2148e+00, -1.0798e-01,  1.1946e+00],
        [-9.8804e+00, -2.6722e+01, -2.1087e+00,  9.0800e-01,  1.1090e+00,
          2.2110e+00,  3.5706e-02,  1.8469e-01, -1.6281e+00],
        [ 6.5109e+00, -1.1699e-01, -7.9388e-01,  7.1200e-01,  6.0100e-01,
          1.8910e+00, -3.1659e+00, -5.5354e-03,  1.3895e+00],
        [-4.6258e+01,  1.5532e+01, -1.3669e+00,  7.5500e-01,  1.2350e+00,
          2.0830e+00, -4.6652e+00, -1.4687e+00, -2.0151e-01],
        [-3.2979e+00, -2.2998e+01, -1.9206e+00,  2.0370e+00,  4.9580e+00,
          1.6390e+00,  1.2929e-02,  5.0695e-02, -1.1235e+01],
        [ 1.6781e+01,  5.3233e+01,  1.5320e+00,  7.2400e-01,  8.2800e-01,
          1.8350e+00, -2.9483e+00,  2.5189e-01,  1.3234e+00],
        [-1.2731e+01,  2.8231e+01, -5.9179e-01,  7.3800e-01,  7.8300e-01,
          1.5200e+00, -4.6313e+00,  2.1535e-02, -1.8561e-03],
        [-8.6491e+00,  3.7254e+01,  4.5585e-01,  6.9900e-01,  7.3800e-01,
          1.9500e+00,  2.4677e-01, -2.9387e-01, -1.0939e+00]]))), 'gt_labels_3d': DataContainer(tensor([8, 8, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 8, 0, 8, 8, 8, 8, 0, 8, 8, 8])), 'gt_masks_bev': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]]), 'camera_intrinsics': DataContainer(tensor([[[1.2528e+03, 0.0000e+00, 8.2659e+02, 0.0000e+00],
         [0.0000e+00, 1.2528e+03, 4.6998e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]],

        [[1.2567e+03, 0.0000e+00, 8.1779e+02, 0.0000e+00],
         [0.0000e+00, 1.2567e+03, 4.5195e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]],

        [[1.2579e+03, 0.0000e+00, 8.2724e+02, 0.0000e+00],
         [0.0000e+00, 1.2579e+03, 4.5092e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]],

        [[7.9689e+02, 0.0000e+00, 8.5778e+02, 0.0000e+00],
         [0.0000e+00, 7.9689e+02, 4.7688e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]],

        [[1.2550e+03, 0.0000e+00, 8.2958e+02, 0.0000e+00],
         [0.0000e+00, 1.2550e+03, 4.6717e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]],

        [[1.2500e+03, 0.0000e+00, 8.2538e+02, 0.0000e+00],
         [0.0000e+00, 1.2500e+03, 4.6255e+02, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00],
         [0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00]]])), 'camera2ego': DataContainer(tensor([[[ 0.0103,  0.0084,  0.9999,  1.7220],
         [-0.9999,  0.0123,  0.0102,  0.0048],
         [-0.0122, -0.9999,  0.0086,  1.4949],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.8440,  0.0165,  0.5361,  1.5808],
         [-0.5361,  0.0036, -0.8441, -0.4991],
         [-0.0158, -0.9999,  0.0058,  1.5175],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.8225,  0.0065,  0.5687,  1.5753],
         [-0.5687,  0.0164,  0.8224,  0.5005],
         [-0.0040, -0.9998,  0.0172,  1.5070],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.0092, -0.0068, -0.9999,  0.0552],
         [ 0.9999,  0.0113,  0.0091,  0.0108],
         [ 0.0112, -0.9999,  0.0069,  1.5679],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.9479, -0.0089, -0.3185,  1.0485],
         [ 0.3186,  0.0188,  0.9477,  0.4831],
         [-0.0025, -0.9998,  0.0207,  1.5621],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.9237, -0.0026, -0.3830,  1.0595],
         [ 0.3830, -0.0114, -0.9237, -0.4672],
         [-0.0020, -0.9999,  0.0116,  1.5505],
         [ 0.0000,  0.0000,  0.0000,  1.0000]]])), 'lidar2ego': DataContainer(tensor([[-5.4279e-04,  9.9893e-01,  4.6229e-02,  9.8579e-01],
        [-1.0000e+00, -4.0569e-04, -2.9750e-03,  0.0000e+00],
        [-2.9531e-03, -4.6231e-02,  9.9893e-01,  1.8402e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]])), 'lidar2camera': DataContainer(tensor([[[ 0.9999,  0.0122, -0.0095, -0.0023],
         [-0.0101,  0.0539, -0.9985, -0.3551],
         [-0.0117,  0.9985,  0.0540, -0.4252],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.5373, -0.8417, -0.0530,  0.0298],
         [-0.0014,  0.0620, -0.9981, -0.3316],
         [ 0.8434,  0.5363,  0.0322, -0.6104],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.5673,  0.8228,  0.0346,  0.1079],
         [-0.0143,  0.0519, -0.9986, -0.3503],
         [-0.8234,  0.5659,  0.0412, -0.5297],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.9999,  0.0080,  0.0089,  0.0014],
         [-0.0086,  0.0392, -0.9992, -0.2810],
         [-0.0083, -0.9992, -0.0391, -1.0165],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.3191,  0.9469,  0.0403, -0.2124],
         [-0.0159,  0.0372, -0.9992, -0.2867],
         [-0.9476, -0.3195,  0.0032, -0.4325],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.3820, -0.9231, -0.0452,  0.0887],
         [ 0.0139,  0.0432, -0.9990, -0.2987],
         [ 0.9241, -0.3822, -0.0037, -0.4646],
         [ 0.0000,  0.0000,  0.0000,  1.0000]]])), 'camera2lidar': DataContainer(tensor([[[ 0.9999, -0.0101, -0.0117, -0.0063],
         [ 0.0122,  0.0539,  0.9985,  0.4437],
         [-0.0095, -0.9985,  0.0540, -0.3316],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.5373, -0.0014,  0.8434,  0.4983],
         [-0.8417,  0.0620,  0.5363,  0.3730],
         [-0.0530, -0.9981,  0.0322, -0.3097],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[ 0.5673, -0.0143, -0.8234, -0.5024],
         [ 0.8228,  0.0519,  0.5659,  0.2291],
         [ 0.0346, -0.9986,  0.0412, -0.3317],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.9999, -0.0086, -0.0083, -0.0095],
         [ 0.0080,  0.0392, -0.9992, -1.0046],
         [ 0.0089, -0.9992, -0.0391, -0.3206],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.3191, -0.0159, -0.9476, -0.4822],
         [ 0.9469,  0.0372, -0.3195,  0.0736],
         [ 0.0403, -0.9992,  0.0032, -0.2765],
         [ 0.0000,  0.0000,  0.0000,  1.0000]],

        [[-0.3820,  0.0139,  0.9241,  0.4674],
         [-0.9231,  0.0432, -0.3822, -0.0828],
         [-0.0452, -0.9990, -0.0037, -0.2961],
         [ 0.0000,  0.0000,  0.0000,  1.0000]]])), 'lidar2image': DataContainer(tensor([[[ 1.2430e+03,  8.4065e+02,  3.2763e+01, -3.5435e+02],
         [-1.8201e+01,  5.3680e+02, -1.2255e+03, -6.4471e+02],
         [-1.1703e-02,  9.9847e-01,  5.4022e-02, -4.2520e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]],

        [[ 1.3649e+03, -6.1926e+02, -4.0339e+01, -4.6164e+02],
         [ 3.7946e+02,  3.2031e+02, -1.2398e+03, -6.9256e+02],
         [ 8.4341e-01,  5.3631e-01,  3.2160e-02, -6.1037e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]],

        [[ 3.2370e+01,  1.5032e+03,  7.7623e+01, -3.0244e+02],
         [-3.8932e+02,  3.2044e+02, -1.2375e+03, -6.7942e+02],
         [-8.2342e-01,  5.6594e-01,  4.1220e-02, -5.2968e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]],

        [[-8.0398e+02, -8.5072e+02, -2.6438e+01, -8.7080e+02],
         [-1.0823e+01, -4.4529e+02, -8.1490e+02, -7.0868e+02],
         [-8.3335e-03, -9.9920e-01, -3.9103e-02, -1.0165e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]],

        [[-1.1866e+03,  9.2326e+02,  5.3264e+01, -6.2534e+02],
         [-4.6263e+02, -1.0254e+02, -1.2525e+03, -5.6183e+02],
         [-9.4759e-01, -3.1948e-01,  3.1695e-03, -4.3253e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]],

        [[ 2.8519e+02, -1.4693e+03, -5.9563e+01, -2.7260e+02],
         [ 4.4474e+02, -1.2283e+02, -1.2504e+03, -5.8825e+02],
         [ 9.2405e-01, -3.8225e-01, -3.7099e-03, -4.6465e-01],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00]]])), 'img_aug_matrix': DataContainer(tensor([[[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]],

        [[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]],

        [[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]],

        [[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]],

        [[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]],

        [[   0.4800,    0.0000,    0.0000,  -32.0000],
         [   0.0000,    0.4800,    0.0000, -176.0000],
         [   0.0000,    0.0000,    1.0000,    0.0000],
         [   0.0000,    0.0000,    0.0000,    1.0000]]])), 'lidar_aug_matrix': DataContainer(tensor([[1., 0., 0., 0.],
        [0., 1., 0., 0.],
        [0., 0., 1., 0.],
        [0., 0., 0., 1.]])), 'metas': DataContainer({'filename': ['./data/nuscenes/samples/CAM_FRONT/n008-2018-08-01-15-16-36-0400__CAM_FRONT__1533151603512404.jpg', './data/nuscenes/samples/CAM_FRONT_RIGHT/n008-2018-08-01-15-16-36-0400__CAM_FRONT_RIGHT__1533151603520482.jpg', './data/nuscenes/samples/CAM_FRONT_LEFT/n008-2018-08-01-15-16-36-0400__CAM_FRONT_LEFT__1533151603504799.jpg', './data/nuscenes/samples/CAM_BACK/n008-2018-08-01-15-16-36-0400__CAM_BACK__1533151603537558.jpg', './data/nuscenes/samples/CAM_BACK_LEFT/n008-2018-08-01-15-16-36-0400__CAM_BACK_LEFT__1533151603547405.jpg', './data/nuscenes/samples/CAM_BACK_RIGHT/n008-2018-08-01-15-16-36-0400__CAM_BACK_RIGHT__1533151603528113.jpg'], 'timestamp': 1533151603547590, 'ori_shape': (1600, 900), 'img_shape': (1600, 900), 'lidar2image': [array([[ 1.2429899e+03,  8.4064954e+02,  3.2762554e+01, -3.5435117e+02],
       [-1.8201262e+01,  5.3679852e+02, -1.2255375e+03, -6.4470789e+02],
       [-1.1702505e-02,  9.9847114e-01,  5.4022189e-02, -4.2520365e-01],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32), array([[ 1.3649467e+03, -6.1926489e+02, -4.0339165e+01, -4.6164282e+02],
       [ 3.7946234e+02,  3.2030728e+02, -1.2397948e+03, -6.9255627e+02],
       [ 8.4340686e-01,  5.3631204e-01,  3.2159850e-02, -6.1037183e-01],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32), array([[ 3.2369884e+01,  1.5031543e+03,  7.7623184e+01, -3.0243790e+02],
       [-3.8932019e+02,  3.2044153e+02, -1.2374531e+03, -6.7942474e+02],
       [-8.2341528e-01,  5.6594008e-01,  4.1219689e-02, -5.2967709e-01],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32), array([[-8.0398230e+02, -8.5072388e+02, -2.6437662e+01, -8.7079596e+02],
       [-1.0823281e+01, -4.4528595e+02, -8.1489746e+02, -7.0868420e+02],
       [-8.3335005e-03, -9.9920046e-01, -3.9102800e-02, -1.0164535e+00],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32), array([[-1.1865662e+03,  9.2326154e+02,  5.3264156e+01, -6.2534119e+02],
       [-4.6262552e+02, -1.0254059e+02, -1.2524772e+03, -5.6182843e+02],
       [-9.4758677e-01, -3.1948286e-01,  3.1694896e-03, -4.3252730e-01],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32), array([[ 2.8518930e+02, -1.4692765e+03, -5.9563427e+01, -2.7260034e+02],
       [ 4.4473605e+02, -1.2282570e+02, -1.2503927e+03, -5.8824615e+02],
       [ 9.2405295e-01, -3.8224655e-01, -3.7098916e-03, -4.6464515e-01],
       [ 0.0000000e+00,  0.0000000e+00,  0.0000000e+00,  1.0000000e+00]],
      dtype=float32)], 'pad_shape': (1600, 900), 'scale_factor': 1.0, 'box_mode_3d': <Box3DMode.LIDAR: 0>, 'box_type_3d': <class 'mmdet3d.core.bbox.structures.lidar_box3d.LiDARInstance3DBoxes'>, 'img_norm_cfg': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 'token': '3e8750f331d7499e9b5123e9eb70f2e2', 'lidar_path': './data/nuscenes/samples/LIDAR_TOP/n008-2018-08-01-15-16-36-0400__LIDAR_TOP__1533151603547590.pcd.bin'})}"""
import json

# The given string
input_str = a # Add the complete string here


# Convert the string to a dictionary
input_dict = eval(input_str)

# Save the dictionary as a JSON file
with open('dataset.json', 'w') as json_file:
    json.dump(input_dict, json_file, indent=4)
